name: Build PyICU wheels for Windows

on:
  workflow_dispatch:

env:
  PYICU_TAG: v2.14
  ICU_VERSION: 76
  ICU_RELEASE: 76-1/icu4c-76_1
  CIBW_TEST_REQUIRES: pytest six
  CIBW_TEST_COMMAND: pytest {project}/test
  CIBW_SKIP: "pp* cp36*"

jobs:
  # build_amd64:
  #   name: Build AMD64 wheels
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-2019]
  #   env:
  #     ICU_ARCH: 64
  #     ICU_PLAT: Win64-MSVC2022
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: download.cmd
  #       shell: cmd
  #     - uses: pypa/cibuildwheel@v2.21.3
  #       env:
  #         CIBW_ARCHS_WINDOWS: AMD64
  #         CIBW_ENVIRONMENT_WINDOWS: INCLUDE="include;$INCLUDE" LIB="lib$ICU_ARCH;$LIB"
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         path: ./wheelhouse/*.whl
  #         name: wheels-win-amd64
  build_arm64:
    name: Build ARM64 wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
    env:
      ICU_ARCH: ARM64
      ICU_PLAT: WinARM64-MSVC2022
    steps:
      - uses: actions/checkout@v4
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_BUILD: cp312-win_arm64   
      # - run: download.cmd
      #   shell: cmd
      # - uses: pypa/cibuildwheel@2.22.0
      #   env:
      #     CIBW_BUILD: cp312-win_arm64
      #     CIBW_SKIP: "pp* cp36* cp37* cp38* cp39* cp310*"
      #     CIBW_ARCHS_WINDOWS: ARM64
      #     CIBW_ENVIRONMENT_WINDOWS: INCLUDE="include;$INCLUDE" LIB="lib$ICU_ARCH;$LIB"
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-win-arm64
          
  # build_mac:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [macos-12, macos-latest]
  #       python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
  #       architecture: ["x64", "arm64"]
  #     fail-fast:
  #       false

  #   name: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
  #   steps:
  #     - name: Checkout repo
  #       run: |
  #         git clone https://gitlab.pyicu.org/main/pyicu.git .

  #     - name: Update brew
  #       run: |
  #         brew update
          
  #     - name: Install brew dependencies
  #       run: |
  #         brew install \
  #            lzo \
  #            icu4c      

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         architecture: ${{ matrix.architecture }}
          
  #     - name: Set pip build vars
  #       id: envpip
  #       run: |
  #         echo "C_INCLUDE_PATH=$(brew --prefix lzo)/include:$(brew --prefix lzo)/include/lzo" >> $GITHUB_ENV
  #         echo "LIBRARY_PATH=$BREW_PREFIX/Cellar/lib" >> $GITHUB_ENV
  #         echo "PKG_CONFIG_PATH=$BREW_PREFIX/Cellar/lib/pkgconfig:$(brew --prefix icu4c)/lib/pkgconfig:$(brew --prefix lzo)/lib/pkgconfig" >> $GITHUB_ENV
  #         echo "LDFLAGS=-L$(brew --prefix icu4c)/lib -L$(brew --prefix icu4c)/lib" >> $GITHUB_ENV
  #         echo "CPPFLAGS=-I$(brew --prefix icu4c)/include -I$(brew --prefix lzo)/include" >> $GITHUB_ENV
     
  #     - name: Build wheel
  #       run: |
  #         python -m pip install -U pip wheel setuptools build
  #         python -m build
  #         # python setup.py bdist_wheel

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: pyicu-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.python-version }}
  #         path: "dist/**/*.whl"
  #         if-no-files-found: error
#  icu4c-Win32 binaries no longer published
#  build_x86:
#    name: Build x86 wheels
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [windows-2019]
#    env:
#      ICU_PLAT: Win32-MSVC2022
#    steps:
#      - uses: actions/checkout@v4
#      - run: download.cmd
#        shell: cmd
#      - uses: pypa/cibuildwheel@v2.21.3
#        env:
#          CIBW_ARCHS_WINDOWS: x86
#          CIBW_ENVIRONMENT_WINDOWS: INCLUDE="include;$INCLUDE" LIB="lib$ICU_ARCH;$LIB"
#      - uses: actions/upload-artifact@v4
#        with:
#          path: ./wheelhouse/*.whl
#          name: wheels-win32
  release:
    if: false
    needs: [build_arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write    

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        
        with:
          path: ./artifacts
          merge-multiple: true
          
      - name: List artifacts
        run: |
          pwd
          echo ${{ github.workspace }}/artifacts
          ls -alh ${{ github.workspace }}
          find .       

      - name: make release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}
          # body: macos-${{ matrix.architecture }}
          artifacts: "artifacts/*.zip,artifacts/*.dmg"
          generateReleaseNotes: false
          makeLatest: true
          allowUpdates: true
          tag: ${{ env.TAG }}
        
